#
# Copyright Â© 2017 <code@io7m.com> http://io7m.com
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
# IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

a.class.became.an.enum=A class became an enum
a.default.method.was.added.to.an.interface=A default method was added to an interface
a.default.method.was.removed.from.an.interface=A default method was removed from an interface
a.field.declaration.reduces.the.accessibility.of.an.overridden.field=A field declaration reduces the accessibility of an overridden field
a.field.moved.to.an.ancestor.class=A field moved to an ancestor class
a.final.class.was.made.non.final=A final class was made non-final
a.method.became.less.accessible=A method became less accessible
a.method.became.more.accessible=A method became more accessible
a.method.declaration.reduces.the.accessibility.of.an.overridden.method=A method declaration reduces the accessibility of an overridden method
a.method.overload.was.added=A method overload was added
a.method.overload.was.removed=A method overload was removed
a.method.was.moved.to.an.ancestor.class=A method was moved to an ancestor class
a.module.is.now.transitively.exported.by.a.requires.directive=A module is now transitively exported by a 'requires' directive
a.module.no.longer.provides.a.service=A module no longer provides a service
a.module.no.longer.requires.another.module=A module no longer requires another module
a.module.now.provides.a.service=A module now provides a service
a.module.now.requires.another.module=A module now requires another module
a.non.abstract.class.was.made.abstract=A non-abstract class was made abstract
a.non.final.class.was.made.final=A non-final class was made final
a.non.final.field.became.final=A non-final field became final
a.non.interface.class.was.changed.into.an.interface=A non-interface class was changed into an interface
a.non.private.constructor.was.added=A non-private constructor was added
a.non.private.constructor.was.removed=A non-private constructor was removed
a.non.private.field.was.added=A non-private field was added
a.non.private.field.was.removed=A non-private field was removed
a.non.private.method.was.added=A non-private method was added
a.non.private.method.was.removed=A non-private method was removed
a.non.public.class.was.made.public=A non-public class was made public
a.non.static.field.attempts.to.override.a.static.field=A non-static field attempts to override a static field
a.non.static.method.attempts.to.override.a.static.method=A non-static method attempts to override a static method
a.package.is.exported.qualified.by.a.module=A package is exported qualified by a module
a.package.is.no.longer.exported.qualified.by.a.module=A package is no longer exported qualified by a module
a.package.is.no.longer.exported.unqualified.by.a.module=A package is no longer exported unqualified by a module
a.package.is.no.longer.opened.qualified.by.a.module=A package is no longer opened qualified by a module
a.package.is.no.longer.opened.unqualified.by.a.module=A package is no longer opened unqualified by a module
a.package.is.no.transitively.exported.by.a.module=A package is no transitively exported by a module
a.package.is.now.exported.unqualified=A package is now exported unqualified
a.package.is.now.opened.unqualified=A package is now opened unqualified
a.package.is.opened.qualified.by.a.module=A package is opened qualified by a module
a.previously.final.field.became.non.final=A previously final field became non-final
a.previously.final.method.became.non.final=A previously final method became non-final
a.previously.final.method.became.non.variadic=A previously final method became non-variadic
a.previously.non.final.method.became.final=A previously non-final method became final
a.previously.non.final.method.became.variadic=A previously non-final method became variadic
a.previously.non.static.field.became.static=A previously non-static field became static
a.previously.static.field.became.non.static=A previously static field became non-static
a.public.class.was.added.to.an.exported.package=A public class was added to an exported package
a.public.class.was.made.non.public=A public class was made non-public
a.public.class.was.removed.from.an.exported.package=A public class was removed from an exported package
a.static.field.attempts.to.override.a.non.static.field=A static field attempts to override a non-static field
a.static.initializer.was.added=A static initializer was added
a.static.method.attempts.to.override.a.non.static.method=A static method attempts to override a non-static method
a.static.method.was.added.to.an.interface=A static method was added to an interface
a.static.method.was.removed.from.an.interface=A static method was removed from an interface
an.abstract.class.was.made.non.abstract=An abstract class was made non-abstract
an.abstract.method.was.added.to.an.interface=An abstract method was added to an interface
an.abstract.method.was.removed.from.an.interface=An abstract method was removed from an interface
an.enum.was.changed.to.a.non.enum.type=An enum was changed to a non-enum type
an.interface.was.changed.into.a.non.interface.class=An interface was changed into a non-interface class
binary.compatible.but.source.incompatible=Binary compatible but source incompatible
generics.none=(None)
one.or.more.members.cases.were.added.to.an.enum=One or more members/cases were added to an enum
one.or.more.members.cases.were.removed.from.an.enum=One or more members/cases were removed from an enum
requires.major.version.number.increment=Requires major version number increment
requires.minor.version.number.increment=Requires minor version number increment
requires.no.version.number.increment=Requires no version number increment
source.and.binary.compatible=Source and binary compatible
source.and.binary.incompatible=Source and binary incompatible
source.compatible.but.binary.incompatible=Source compatible but binary incompatible
the.accessibility.of.a.field.was.increased=The accessibility of a field was increased
the.accessibility.of.a.field.was.reduced=The accessibility of a field was reduced
the.bytecode.version.of.a.public.class.has.changed=The bytecode version of a public class has changed
the.declared.thrown.exceptions.for.a.method.have.changed=The declared thrown exceptions for a method have changed
the.generic.type.parameters.of.a.class.have.changed=The generic type parameters of a class have changed
the.type.of.a.non.private.field.changed=The type of a non-private field changed
